# .env file for backend
# --- GENERAL APPLICATION SETTINGS ---
# PORT: The port your backend server will run on.
PORT=3000
# NODE_ENV: The application's environment. 'development' for development, 'production' for production.
NODE_ENV=development
# SERVER_BASE_URL: The base URL for your backend server. Used for generating absolute URLs for uploaded files.
# For local development: http://localhost:PORT
# For production: https://api.your-domain.com (ensure HTTPS is set up in production)
SERVER_BASE_URL=http://localhost:3000

# --- CORS CONFIGURATION ---
# CORS_ORIGINS: A comma-separated list of allowed origins for Cross-Origin Resource Sharing (CORS).
# This prevents unauthorized domains from accessing your API.
# Add your frontend development URLs and your production frontend domain here.
CORS_ORIGINS=http://127.0.0.1:5500,http://localhost:5500

# --- DATABASE CONFIGURATION ---
# MONGODB_URI: The URI for connecting to your MongoDB database.
# For local development: mongodb://localhost:27017/aurumfox
# For production: Use a secure connection string to your MongoDB Atlas or self-hosted instance.
MONGODB_URI=mongodb://localhost:27017/aurumfox

# --- SOLANA BLOCKCHAIN CONFIGURATION ---
# SOLANA_NETWORK: The Solana network your backend will connect to.
# Possible values: 'devnet', 'testnet', or 'mainnet-beta'.
SOLANA_NETWORK=devnet
# SOLANA_RPC_URL: The URL for the Solana RPC node.
# In production, it's HIGHLY recommended to use a reliable RPC provider
# like QuickNode, Alchemy, or Helius for stability and performance.
# Example: https://api.devnet.solana.com (for devnet)
# Example: https://mainnet.helius-rpc.com/?api-key=YOUR_HELIUS_API_KEY (for mainnet-beta)
SOLANA_RPC_URL=https://api.devnet.solana.com

# --- SECURE WALLET OPERATIONS (FOR BACKEND) ---
# IMPORTANT: NEVER STORE REAL PRODUCTION PRIVATE KEYS DIRECTLY IN ENVIRONMENT VARIABLES!
# This is a SERIOUS SECURITY RISK.
# For production, use a Key Management Service (KMS) such as AWS KMS, Google Cloud KMS, Azure Key Vault,
# or a secure vault solution like HashiCorp Vault.
# BACKEND_WALLET_PRIVATE_KEY: The backend wallet's private key in base58 encoding.
# Use ONLY for local development and testing with non-critical funds.
# BACKEND_WALLET_PRIVATE_KEY=your_base58_encoded_private_key_for_development_and_testing

# For production, instead of a private key, you might use a KMS identifier or ARN:
# BACKEND_WALLET_KMS_KEY_ID=arn:aws:kms:region:account-id:key/key-id

# --- AUTHENTICATION & AUTHORIZATION ---
# JWT_SECRET: A very strong, random string for signing JSON Web Tokens (JWT).
# This is CRITICAL for securing your API endpoints. Generate a long, complex, random string.
# You can use a tool like 'openssl rand -base64 32' to generate one.
JWT_SECRET=ВАШ_ОЧЕНЬ_СИЛЬНЫЙ_СЕКРЕТНЫЙ_КЛЮЧ_ДЛЯ_JWT_ЗАМЕНИТЕ_ЭТО

# ADMIN_WALLETS: A comma-separated list of Solana wallet addresses that will have 'admin' role privileges.
# These wallets can bypass certain access controls for management functions.
# Example: ADMIN_WALLETS=Abc123xyz...,Def456uvw...,Ghi789rst...
ADMIN_WALLETS=

# --- FILE STORAGE CONFIGURATION (for NFTs and other media) ---
# For local development, files are saved to the 'uploads/' directory.
# For production, it is highly recommended to use an external cloud storage solution.

# --- IPFS/Pinata/Web3.Storage Configuration (Decentralized Storage) ---
# Uncomment and configure if you plan to use IPFS services for file storage.
# IPFS_API_KEY: Your API key for your chosen IPFS service (e.g., Pinata API Key).
# IPFS_API_SECRET: Your API secret for your chosen IPFS service (e.g., Pinata API Secret).
# IPFS_API_KEY=your_ipfs_service_api_key
# IPFS_API_SECRET=your_ipfs_service_api_secret

# --- AWS S3 Configuration (Centralized Cloud Storage) ---
# Uncomment and configure if you plan to use AWS S3 for file storage.
# AWS_S3_ACCESS_KEY_ID: Your AWS Access Key ID.
# AWS_S3_SECRET_ACCESS_KEY: Your AWS Secret Access Key.
# AWS_S3_BUCKET_NAME: The name of your S3 bucket.
# AWS_S3_REGION: The AWS region where your S3 bucket is located (e.g., us-east-1).
# AWS_S3_ACCESS_KEY_ID=
# AWS_S3_SECRET_ACCESS_KEY=
# AWS_S3_BUCKET_NAME=
# AWS_S3_REGION=
