// utils/dbSeeder.js
const Announcement = require('../models/Announcement');
const Photo = require('../models/Photo');
const Post = require('../models/Post');
const Nft = require('../models/Nft');
const Game = require('../models/Game');
const Ad = require('../models/Ad');
const { deleteFile } = require('./fileUtils');
const path = require('path');
const fs = require('fs').promises; // Make sure to import fs.promises
const config = require('../config'); // Import configuration

async function seedInitialData() {
    console.log('Checking for initial data and seeding if necessary...');
    try {
        // --- Announcements ---
        if (await Announcement.countDocuments() === 0) {
            await Announcement.insertMany([
                { text: 'Welcome to Aurum Fox Unified Portal!', date: new Date() },
                { text: 'AFOX Phase 1 completed!', date: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000) }
            ]);
            console.log('  Initial announcements seeded.');
        }

        // --- Photos ---
        if (await Photo.countDocuments() === 0) {
            const placeholders = ['photo_placeholder_1.png', 'photo_placeholder_2.png'];
            for (const p of placeholders) {
                const pPath = path.join(config.uploadDir, p);
                try { await fs.access(pPath); } catch (err) { await fs.writeFile(pPath, Buffer.from([])); console.log(`Created placeholder: ${pPath}`); }
            }
            await Photo.insertMany([
                { title: 'First Day in Office', description: 'Getting started with Aurum Fox.', imageUrl: `http://localhost:${config.port}/uploads/photo_placeholder_1.png`, date: new Date(Date.now() - 10 * 24 * 60 * 60 * 1000), creatorWallet: "SIMULATED_WALLET_A" },
                { title: 'Aurum Fox Team', description: 'Our dedicated team.', imageUrl: `http://localhost:${config.port}/uploads/photo_placeholder_2.png`, date: new Date(Date.now() - 15 * 24 * 60 * 60 * 1000), creatorWallet: "SIMULATED_WALLET_B" }
            ]);
            console.log('  Initial photos seeded.');
        }

        // --- Posts ---
        if (await Post.countDocuments() === 0) {
            await Post.insertMany([
                { title: "Launch Day!", content: "Today marks the official launch of the Aurum Fox Unified Portal. We're excited to bring you a seamless Web3 and multimedia experience!", date: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000), authorWallet: "SIMULATED_AUTHOR_WALLET_1" },
                { title: "New Features Coming Soon", content: "Stay tuned for exciting new features including decentralized storage options for your media and advanced NFT marketplace functionalities.", date: new Date(Date.now() - 25 * 24 * 60 * 60 * 1000), authorWallet: "SIMULATED_AUTHOR_WALLET_2" }
            ]);
            console.log('  Initial posts seeded.');
        }

        // --- NFTs ---
        if (await Nft.countDocuments() === 0) {
            const nftPlaceholders = ['nft_marketplace_1.png', 'nft_marketplace_2.png', 'nft_user_owned.png'];
            for (const p of nftPlaceholders) {
                const pPath = path.join(config.uploadDir, p);
                try { await fs.access(pPath); } catch (err) { await fs.writeFile(pPath, Buffer.from([])); console.log(`Created placeholder: ${pPath}`); }
            }
            await Nft.insertMany([
                {
                    name: "Rare Fox", description: "A very rare golden fox NFT.", image: `http://localhost:${config.port}/uploads/nft_marketplace_1.png`, mint: "SOME_MARKETPLACE_NFT_MINT_1", owner: config.marketplaceEscrowWallet, isListed: true, price: 0.8, listedAt: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000), listingDuration: 30, listedBy: config.marketplaceEscrowWallet, attributes: [{ trait_type: "Rarity", value: "Rare" }],
                    history: [{ type: 'Mint', to: config.marketplaceEscrowWallet, timestamp: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000) }, { type: 'List', from: config.marketplaceEscrowWallet, timestamp: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000) }]
                },
                {
                    name: "Cunning Fox", description: "A cunning fox ready to pounce.", image: `http://localhost:${config.port}/uploads/nft_marketplace_2.png`, mint: "SOME_MARKETPLACE_NFT_MINT_2", owner: "ANOTHER_SELLER_WALLET_ADDRESS", isListed: true, price: 0.3, listedAt: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000), listingDuration: 60, listedBy: "ANOTHER_SELLER_WALLET_ADDRESS", attributes: [{ trait_type: "Expression", value: "Wink" }],
                    history: [{ type: 'Mint', to: "ANOTHER_SELLER_WALLET_ADDRESS", timestamp: new Date(Date.now() - 4 * 24 * 60 * 60 * 1000) }, { type: 'List', from: "ANOTHER_SELLER_WALLET_ADDRESS", timestamp: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000) }]
                },
                {
                    name: "User Owned Fox", description: "An NFT owned by a user, not yet listed.", image: `http://localhost:${config.port}/uploads/nft_user_owned.png`, mint: "USER_OWNED_NFT_MINT_1", owner: "SIMULATED_USER_WALLET_ADDRESS", isListed: false, price: null, attributes: [{ trait_type: "Color", value: "Blue" }],
                    history: [{ type: 'Mint', to: "SIMULATED_USER_WALLET_ADDRESS", timestamp: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000) }]
                }
            ]);
            console.log('  Initial NFTs seeded.');
        }

        // --- Games ---
        if (await Game.countDocuments() === 0) {
            await Game.insertMany([
                { title: "Solana Chess", description: "Play chess on Solana!", url: "https://example.com/solana-chess", developer: "BlockchainDevs" },
                { title: "Degen Racer", description: "Fast-paced racing game.", url: "https://example.com/degen-racer", developer: "GameFi Studios" }
            ]);
            console.log('  Initial games seeded.');
        }

        // --- Ads ---
        if (await Ad.countDocuments() === 0) {
            const adPlaceholderPath = path.join(config.uploadDir, 'ad_placeholder.png');
            try { await fs.access(adPlaceholderPath); } catch (err) { await fs.writeFile(adPlaceholderPath, Buffer.from([])); console.log(`Created placeholder: ${adPlaceholderPath}`); }

            await Ad.insertMany([
                { title: "Buy My Awesome Project!", content: "Check out our new dApp, it's great!", imageUrl: `http://localhost:${config.port}/uploads/ad_placeholder.png`, link: "https://myawesomedapp.com", advertiser: "ProjectX" }
            ]);
            console.log('  Initial ads seeded.');
        }

    } catch (error) {
        console.error('Error seeding initial data:', error);
    }
}

module.exports = { seedInitialData };
