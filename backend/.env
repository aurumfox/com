# .env - Environment Variables for Aurum Fox Unified Portal

# --- GENERAL APPLICATION SETTINGS ---
# PORT: The port your backend server will run on.
PORT=3000

# NODE_ENV: The application's environment.
# 'development' for local development, 'production' for live deployment, 'test' for running tests.
NODE_ENV=development

# BASE_URL: The base URL of your backend server, as seen by other services or for internal use.
# In production, this should be your deployed domain (e.g., https://api.yourapp.com).
BASE_URL=http://localhost:3000

# CORS_ORIGINS: A comma-separated list of origins allowed to make requests to your backend.
# In production, restrict this to your actual frontend domain(s).
CORS_ORIGINS=http://127.0.0.1:5500,http://localhost:5500,http://localhost:3000

# FRONTEND_URL: The base URL of your frontend application. Used for redirects or as a reference.
FRONTEND_URL=http://127.0.0.1:5500


# --- DATABASE CONFIGURATION ---
# MONGODB_URI: The URI for connecting to your MongoDB database in development/production.
# In production, use a secure connection string from your cloud MongoDB provider (e.g., MongoDB Atlas).
MONGODB_URI=mongodb://localhost:27017/aurumfox

# MONGODB_TEST_URI: The URI for connecting to your MongoDB database specifically for testing.
MONGODB_TEST_URI=mongodb://localhost:27017/solana_dapp_test_db

# REDIS_URI: The URI for connecting to your Redis cache server.
REDIS_URI=redis://localhost:6379


# --- SOLANA BLOCKCHAIN CONFIGURATION ---
# SOLANA_NETWORK: The Solana network your backend will connect to.
# Possible values: 'devnet', 'testnet', or 'mainnet-beta'.
SOLANA_NETWORK=devnet

# SOLANA_RPC_URL: The URL for the Solana RPC node.
# In production, it's HIGHLY recommended to use a reliable RPC provider
# like QuickNode, Alchemy, or Helius for stability and performance.
SOLANA_RPC_URL=https://api.devnet.solana.com

# SOLANA_TRANSACTION_TIMEOUT_MS: Timeout for Solana RPC calls in milliseconds.
SOLANA_TRANSACTION_TIMEOUT_MS=10000 # 10 seconds, reasonable for most RPC calls

# LAMPORTS_PER_SOL: The conversion factor from Lamports to SOL (1 SOL = 1,000,000,000 Lamports).
# This is a constant, but good to have accessible if you prefer it as an env var.
LAMPORTS_PER_SOL=1000000000


# --- SECURE WALLET OPERATIONS (FOR BACKEND) ---
# IMPORTANT: NEVER STORE PRIVATE KEYS DIRECTLY IN PRODUCTION! This is a SERIOUS SECURITY RISK.
# For production, use a Key Management Service (KMS) such as AWS KMS, Google Cloud KMS, or Azure Key Vault.

# BACKEND_WALLET_PRIVATE_KEY: The backend wallet's private key in base58 encoding.
# Use ONLY for local development and testing! Keep this commented out or unset in production.
# BACKEND_WALLET_PRIVATE_KEY=your_base58_encoded_private_key_for_development

# For production, instead of a private key, you will use a KMS identifier or ARN:
# BACKEND_WALLET_KMS_KEY_ID=arn:aws:kms:region:account-id:key/key-id
# BACKEND_WALLET_KMS_REGION=us-east-1 # Example for AWS KMS
# BACKEND_WALLET_KMS_TYPE=AWS # e.g., AWS, GCP, Azure

# MARKETPLACE_OWNER_WALLET_ADDRESS: The Solana wallet address of the marketplace owner.
# This wallet will receive platform fees.
MARKETPLACE_OWNER_WALLET_ADDRESS=2uE8xK2rN1p3Q5S7U9W1Y3a5b7c9d1e3f5g7h9i1j3k5l7m9n1o3p5q7r9s1t3u5v

# MARKETPLACE_FEE_PERCENTAGE: The percentage fee taken by the marketplace on sales (e.g., 0.02 for 2%).
MARKETPLACE_FEE_PERCENTAGE=0.02 # Example: 2%


# --- IPFS/STORAGE CONFIGURATION (for storing NFTs or other files) ---
# If you are using an IPFS service (e.g., Pinata, Web3.Storage) for file storage.
# UNCOMMENT AND CONFIGURE IF YOU USE AN IPFS SERVICE IN PRODUCTION.
# IPFS_API_KEY=your_ipfs_service_api_key
# IPFS_API_SECRET=your_ipfs_service_api_secret
# IPFS_GATEWAY_URL=https://ipfs.io/ipfs/
# PINATA_JWT=your_pinata_jwt_for_production


# --- AUTHENTICATION & SECURITY SETTINGS ---
# JWT_SECRET: A very strong, random string for signing JSON Web Tokens (JWT).
# Generate a strong, unique key for production (e.g., `openssl rand -base64 64`).
JWT_SECRET=your_super_strong_random_jwt_key_minimum_64_characters_long_for_production_use

# JWT_EXPIRATION_TIME: Expiration time for JWTs (e.g., '1h', '7d').
JWT_EXPIRATION_TIME=1h

# DEFAULT_ADMIN_PASSWORD: A default password for initial admin user seeding.
# IMPORTANT: This should be changed or removed in production after initial setup.
DEFAULT_ADMIN_PASSWORD=adminpassword

# DEFAULT_TEST_PASSWORD: A default password for initial test user seeding (development only).
# IMPORTANT: Remove this from production or use a securely generated value.
DEFAULT_TEST_PASSWORD=ChangeMeTest123!

# DEFAULT_DEV_PASSWORD: A default password for initial developer user seeding (development only).
# IMPORTANT: Remove this from production or use a securely generated value.
DEFAULT_DEV_PASSWORD=ChangeMeDev123!

# DEFAULT_AD_PASSWORD: A default password for initial advertiser user seeding (development only).
# IMPORTANT: Remove this from production or use a securely generated value.
DEFAULT_AD_PASSWORD=ChangeMeAd123!

# DEFAULT_PUB_PASSWORD: A default password for initial publisher user seeding (development only).
# IMPORTANT: Remove this from production or use a securely generated value.
DEFAULT_PUB_PASSWORD=ChangeMePub123!

# ADMIN_WALLETS: A comma-separated list of administrator Solana wallet addresses for management functions.
# Ensure these are actual Solana wallet addresses for your trusted admins.
ADMIN_WALLETS=wallet1,wallet2,wallet3 # Example: 8KkFhYV1G5K4s3jJ7p9m2L1x6C9B0N3M5L7S9U1W3X5Y7Z9, ...

# USER_ROLES: A comma-separated list of available user roles.
# This can be used for validation and authorization checks in your application.
USER_ROLES=user,admin,developer,advertiser,publisher

# CSP_REPORT_URI: Optional URI for Content Security Policy violation reporting.
# Uncomment and configure if you are using CSP and wish to collect reports.
# CSP_REPORT_URI=https://your-csp-report-endpoint.com/report


# --- MESSAGE QUEUE (RabbitMQ) CONFIGURATION ---
# RABBITMQ_URI: The URI for connecting to your RabbitMQ server.
RABBITMQ_URI=amqp://localhost

# RABBITMQ_DEFAULT_USER: Default username for RabbitMQ. Change for production.
RABBITMQ_DEFAULT_USER=guest

# RABBITMQ_DEFAULT_PASS: Default password for RabbitMQ. Change for production.
RABBITMQ_DEFAULT_PASS=guest


# --- CACHE CONFIGURATION ---
# CACHE_TTL_SHORT: Default Time-To-Live for short-lived cache entries (in seconds).
CACHE_TTL_SHORT=300 # 5 minutes

# CACHE_TTL_DEFAULT: Default Time-To-Live for standard cache entries (in seconds).
CACHE_TTL_DEFAULT=3600 # 1 hour

# CACHE_TTL_LONG: Default Time-To-Live for long-lived cache entries (in seconds).
CACHE_TTL_LONG=86400 # 24 hours


# --- LOGGING CONFIGURATION ---
# LOG_LEVEL: The minimum level of logs to display (e.g., 'debug', 'info', 'warn', 'error', 'critical').
LOG_LEVEL=debug

# LOG_FILE_PATH: Path to the log file (optional, if logging to file).
# LOG_FILE_PATH=./logs/app.log

# LOG_TO_CONSOLE: Whether to log to console (true/false).
LOG_TO_CONSOLE=true


# --- PAYMENT GATEWAY CONFIGURATION (Example - Uncomment if used) ---
# STRIPE_SECRET_KEY=sk_test_...
# PAYPAL_CLIENT_ID=...
# PAYPAL_CLIENT_SECRET=...
