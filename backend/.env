# .env

# --- GENERAL APPLICATION SETTINGS ---
# PORT: The port your backend server will run on.
PORT=3000
# NODE_ENV: The application's environment.
# 'development' for local development, 'production' for live deployment, 'test' for running tests.
NODE_ENV=development

# --- DATABASE CONFIGURATION ---
# MONGODB_URI: The URI for connecting to your MongoDB database in development/production.
MONGODB_URI=mongodb://localhost:27017/aurumfox
# MONGODB_TEST_URI: The URI for connecting to your MongoDB database specifically for testing.
MONGODB_TEST_URI=mongodb://localhost:27017/solana_dapp_test_db
# REDIS_URI: The URI for connecting to your Redis cache server.
REDIS_URI=redis://localhost:6379

# --- SOLANA BLOCKCHAIN CONFIGURATION ---
# SOLANA_NETWORK: The Solana network your backend will connect to.
# Possible values: 'devnet', 'testnet', or 'mainnet-beta'.
# Uncomment and set this for real Solana interactions.
# SOLANA_NETWORK=devnet
# SOLANA_RPC_URL: The URL for the Solana RPC node.
# In production, it's HIGHLY recommended to use a reliable RPC provider
# like QuickNode, Alchemy, or Helius for stability and performance.
# Uncomment and set this for real Solana interactions.
# SOLANA_RPC_URL=https://api.devnet.solana.com

# --- SECURE WALLET OPERATIONS (FOR BACKEND) ---
# IMPORTANT: NEVER STORE PRIVATE KEYS DIRECTLY IN PRODUCTION! This is a SERIOUS SECURITY RISK.
# For production, use a Key Management Service (KMS) such as AWS KMS, Google Cloud KMS, or Azure Key Vault.

# BACKEND_WALLET_PRIVATE_KEY: The backend wallet's private key in base58 encoding.
# Use ONLY for local development and testing! Keep this commented out or unset in production.
# BACKEND_WALLET_PRIVATE_KEY=your_base58_encoded_private_key_for_development

# For production, instead of a private key, you will use a KMS identifier or ARN:
# BACKEND_WALLET_KMS_KEY_ID=arn:aws:kms:region:account-id:key/key-id

# MARKETPLACE_OWNER_WALLET_ADDRESS: The Solana wallet address of the marketplace owner.
MARKETPLACE_OWNER_WALLET_ADDRESS=2uE8xK2rN1p3Q5S7U9W1Y3a5b7c9d1e3f5g7h9i1j3k5l7m9n1o3p5q7r9s1t3u5v

# --- IPFS/STORAGE CONFIGURATION (if applicable for storing NFTs or other files) ---
# If you are using an IPFS service (e.g., Pinata, Web3.Storage) for file storage:
# IPFS_API_KEY: Your API key for the IPFS service.
# IPFS_API_SECRET: Your API secret for the IPFS service.
# IPFS_API_KEY=your_ipfs_service_api_key
# IPFS_API_SECRET=your_ipfs_service_api_secret

# --- AUTHENTICATION & SECURITY SETTINGS ---
# JWT_SECRET: A very strong, random string for signing JSON Web Tokens (JWT).
# Generate a strong, unique key for production (e.g., using `openssl rand -base64 32`).
JWT_SECRET=your_super_secret_jwt_key_please_change_this_in_production
# DEFAULT_ADMIN_PASSWORD: A default password for initial admin user seeding.
# This should be changed or removed in production.
DEFAULT_ADMIN_PASSWORD=adminpassword
# ADMIN_WALLETS: A comma-separated list of administrator wallet addresses for management functions.
# Ensure these are actual Solana wallet addresses.
# ADMIN_WALLETS=wallet1,wallet2,wallet3

# CORS_ORIGINS: A comma-separated list of origins allowed to make requests to your backend.
# In production, restrict this to your actual frontend domain(s).
CORS_ORIGINS=http://127.0.0.1:5500,http://localhost:5500,http://localhost:3000

# CSP_REPORT_URI: Optional URI for Content Security Policy violation reporting.
# Uncomment and configure if you are using CSP and wish to collect reports.
# CSP_REPORT_URI=https://your-csp-report-endpoint.com/report

# --- FRONTEND INTEGRATION SETTINGS ---
# FRONTEND_URL: The base URL of your frontend application. Used for redirects or as a reference.
FRONTEND_URL=http://127.0.0.1:5500
# FRONTEND_SERVER_BASE_URL: The base URL of your backend server, as seen by the frontend.
# This is crucial if your backend is behind a proxy or load balancer.
FRONTEND_SERVER_BASE_URL=http://localhost:3000

# --- MESSAGE QUEUE (RabbitMQ) CONFIGURATION ---
# RABBITMQ_URI: The URI for connecting to your RabbitMQ server.
# RABBITMQ_URI=amqp://localhost
# RABBITMQ_DEFAULT_USER: Default username for RabbitMQ. Change for production.
# RABBITMQ_DEFAULT_USER=guest
# RABBITMQ_DEFAULT_PASS: Default password for RabbitMQ. Change for production.
# RABBITMQ_DEFAULT_PASS=guest
